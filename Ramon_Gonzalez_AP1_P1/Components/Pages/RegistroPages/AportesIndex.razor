@page "/Aportes/Index"
@using Ramon_Gonzalez_AP1_P1.Models
@using Ramon_Gonzalez_AP1_P1.Service
@inject AportesService AportesService
@rendermode InteractiveServer


<PageTitle>Consulta de Aportes</PageTitle>
<div class="container">
    <div class="card shadow-lg">

        <div class="card-header text-center">
            <h3 class="card-title fw-bold">Consulta de Aportes</h3>
        </div>

        <div class="card-body">

            @* Filtros *@
            <div class="row mb-2">
                <div class="col-3"><strong>Filtrar por</strong></div>
                <div class="col-4"><strong>Busqueda</strong></div>
                <div class="col-2"><strong>Desde</strong></div>
                <div class="col-2"><strong>Hasta</strong></div>
            </div>

            <div class="row align-items-center mb-3">
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" disabled selected>Elija una opción</option>
                        <option value="AportesId">Id</option>
                        <option value="Persona">Persona</option>
                        <option value="Monto">Monto</option>
                        <option value="Fecha">Fecha</option>

                    </InputSelect>
                </div>

                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                        <button class="btn btn-outline-secondary ms-1 bi bi-arrow-repeat" @onclick="Restablecer"
                                title="Restablecer"></button>
                    </div>
                </div>

            </div>
            
            <div class="col-2">
                <InputDate class="form-control" @bind-Value="FechaInicio" />
            </div>

            <div class="col-2">
                <InputDate class="form-control" @bind-Value="FechaFin" />
            </div>
        </div>

            @*Boton crear*@
            <div class="col text-end mb-3">
                <a href="/Aportes/Create" class="btn btn-success">
                    <i class="bi bi-plus-square"></i> Crear
                </a>
            </div>

            @*Tabla*@
            <table class="table table-hover">
                <thead class="table table-striped text-black">
                    <tr>
                        <th>Aportes Id</th>
                        <th>Persona</th>
                        <th>Monto</th>
                        <th>Observación</th>
                        <th>Fecha</th>
                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ap in ListaAportes)
                    {
                        <tr>
                            <td>@ap.AportesId</td>
                            <td>@ap.Persona</td>
                            <td>@ap.Monto.ToString("C")</td>
                            <td>@ap.Fecha.ToString("dd/MM/yyyy")</td>
                            <td>
                                <a href="/Aportes/Edit/@ap.AportesId" class="btn btn-outline-primary bi bi-pencil-square"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            
            <div class="row mt-4">
                <div class="col-auto">
                    <label class="fw-bold">Conteo:</label>
                    <input type="text" class="form-control" value="@ListaAportes.Count" readonly />
                </div>
                <div class="col-auto ms-auto text-end">
                    <label class="fw-bold">Total:</label>
                    <input type="text" class="form-control text-end"
                           value="@ListaAportes.Sum(a => a.Monto).ToString("C")" readonly />
                </div>
            </div>

        </div>
    </div>
<div>





@code {
    private List<Aportes> ListaAportes = new();
    private string Filtro = string.Empty;
    private string ValorFiltro = string.Empty;
    private DateOnly? FechaInicio;
    private DateOnly? FechaFin;


    protected override async Task OnInitializedAsync()
    {
        ListaAportes = await AportesService.ObtenerTodos();
    }

    private async Task Buscar()
    {

        var query = await AportesService.ObtenerTodos();


        if (!string.IsNullOrWhiteSpace(Filtro) && !string.IsNullOrWhiteSpace(ValorFiltro))
        {
            switch (Filtro)
            {
                case "AportesId":
                    if (int.TryParse(ValorFiltro, out var id))
                        query = query.Where(a => a.AportesId == id).ToList();
                    else
                        query = new();
                    break;

                case "Persona":
                    query = query.Where(a =>
                        a.Persona.Contains(ValorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;

                case "Monto":
                    if (decimal.TryParse(ValorFiltro, out var monto))
                        query = query.Where(a => a.Monto == monto).ToList();
                    else
                        query = new();
                    break;

            }
        }

        if (FechaInicio.HasValue)
            query = query.Where(a => a.Fecha >= FechaInicio.Value).ToList();

        if (FechaFin.HasValue)
            query = query.Where(a => a.Fecha <= FechaFin.Value).ToList();
        ListaAportes = query;
    }


    private async Task Restablecer()
    {
        ListaAportes = await AportesService.ObtenerTodos();
        Filtro = String.Empty;
        ValorFiltro = String.Empty;
        FechaInicio = null;
        FechaFin = null;

    }








}
 